version: 0.2
env:
  variables:
    ECR_REPO: 350358346588.dkr.ecr.us-east-1.amazonaws.com/lks-order-image
    ECR_REGION: us-east-1
    CONTAINER_NAME: lks-order-container
phases:
  install:
    runtime-versions:
      nodejs: 16
      docker: 20
  pre_build:
    commands:
      - echo "Install Dependencies and login into ECR"
      - sudo yum install -y jq
      - npm install dotenv
      - npm install
      - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
      - TOKEN=$(aws ecr get-login-password --region $ECR_REGION)
      - | 
        echo "Token dari ECR: '$TOKEN'"
      - |
        echo '{
          "auths": {
            "'$ECR_REPO'": {
              "auth": "'$TOKEN'"
            }
          }
        }' > config.json
      - aws s3 cp config.json s3://credential-for-lks/
      - mkdir -p .ebextensions
      - |-
          echo 'files:
            "/tmp/download_docker_config.sh":
              mode: "000755"
              content: |
                #!/bin/bash
                aws s3 cp s3://credential-for-lks/config.json /root/.docker/config.json
          container_commands:
            01_download_config:
              command: "/tmp/download_docker_config.sh"' > .ebextensions/docker_config.config

      # Update .env files using environment variables from CodePipeline
      - echo "NODE_ENV=$NODE_ENV" > .env.production
      - echo "PORT=$PORT" >> .env.production
      - echo "AWS_ACCESS_KEY=$AWS_ACCESS_KEY" >> .env.production
      - echo "AWS_SECRET_KEY=$AWS_SECRET_KEY" >> .env.production  
      - echo "NODE_ENV=$TEST_NODE_ENV" > .env.testing
      - echo "PORT=$TEST_PORT" >> .env.testing
      - echo "AWS_ACCESS_KEY=$TEST_AWS_ACCESS_KEY" >> .env.testing
      - echo "AWS_SECRET_KEY=$TEST_AWS_SECRET_KEY" >> .env.testing
  build:
    commands:
      - echo "Run unit testing and build docker image"
      - docker build -t $ECR_REPO .
      - npm run test || true
  post_build:
    commands:
      - docker tag $ECR_REPO:latest $ECR_REPO:latest
      - docker tag $ECR_REPO:latest $ECR_REPO:v${CODEBUILD_BUILD_NUMBER}
      - echo $TOKEN | docker login --username AWS --password-stdin 350358346588.dkr.ecr.us-east-1.amazonaws.com
      - docker push $ECR_REPO:latest
      - docker push $ECR_REPO:v${CODEBUILD_BUILD_NUMBER}
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME ${ECR_REPO}:latest > imagedefinitions.json
      - echo "build complete.."
reports:
  test-report:
    files:
      - 'report/test-result.xml'
    file-format: JUNITXML
artifacts:
  files:
    - imagedefinitions.json
    - Dockerrun.aws.json
    - .ebextensions/**
    - .env.testing
    - .env.testing
    - package.json