version: 0.2

env:
  variables:
    ECR_REPO: 350358346588.dkr.ecr.us-east-1.amazonaws.com/lks-order-image
    ECR_REGION: us-east-1
    CONTAINER_NAME: lks-order-container

phases:
  install:
    runtime-versions:
      nodejs: 16
      docker: 20

  pre_build:
    commands:
      - echo "Install Dependencies and login into ECR"
      - sudo yum install -y jq
      - npm install dotenv
      - npm install
      - TOKEN=$(aws ecr get-login-password --region $ECR_REGION)
      - docker login --username AWS --password-stdin $ECR_REPO
      # Update .env files using environment variables from CodePipeline
      - echo "NODE_ENV=$NODE_ENV" > .env.production
      - echo "PORT=$PORT" >> .env.production
      - echo "AWS_ACCESS_KEY=$AWS_ACCESS_KEY" >> .env.production
      - echo "AWS_SECRET_KEY=$AWS_SECRET_KEY" >> .env.production  
      - echo "NODE_ENV=$TEST_NODE_ENV" > .env.testing
      - echo "PORT=$TEST_PORT" >> .env.testing
      - echo "AWS_ACCESS_KEY=$TEST_AWS_ACCESS_KEY" >> .env.testing
      - echo "AWS_SECRET_KEY=$TEST_AWS_SECRET_KEY" >> .env.testing

  build:
    commands:
      - echo "Run unit testing and build docker image"
      - docker build -t $ECR_REPO .
      - npm run test || true

  post_build:
    commands:
      - docker tag $ECR_REPO:latest $ECR_REPO:latest
      - docker tag $ECR_REPO:latest $ECR_REPO:v${CODEBUILD_BUILD_NUMBER}
      - docker push $ECR_REPO:latest
      - docker push $ECR_REPO:v${CODEBUILD_BUILD_NUMBER}
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME ${ECR_REPO}:latest > imagedefinitions.json
      - echo "build complete.."

reports:
  test-report:
    files:
      - 'report/test-result.xml'
    file-format: JUNITXML

artifacts:
  files:
    - imagedefinitions.json
    - Dockerrun.aws.json
    - .ebextensions
    - .env.production
    - .env.testing
    - package.json